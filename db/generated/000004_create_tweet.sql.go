// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: 000004_create_tweet.sql

package generated

import (
	"context"
)

const createTweet = `-- name: CreateTweet :one
INSERT INTO tweets (user_id, message) VALUES ($1, $2) RETURNING id, user_id, message, created_at, updated_at
`

type CreateTweetParams struct {
	UserID  int32  `json:"user_id"`
	Message string `json:"message"`
}

func (q *Queries) CreateTweet(ctx context.Context, arg CreateTweetParams) (Tweet, error) {
	row := q.db.QueryRowContext(ctx, createTweet, arg.UserID, arg.Message)
	var i Tweet
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Message,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
