// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: 000011_create_comment.sql

package generated

import (
	"context"
)

const createComment = `-- name: CreateComment :one
INSERT INTO comments (tweet_id, comment)
VALUES ($1, $2)
RETURNING id, tweet_id, comment, created_at, updated_at
`

type CreateCommentParams struct {
	TweetID int32  `json:"tweet_id"`
	Comment string `json:"comment"`
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment, arg.TweetID, arg.Comment)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.TweetID,
		&i.Comment,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
