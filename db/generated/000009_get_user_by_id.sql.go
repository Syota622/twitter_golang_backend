// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: 000009_get_user_by_id.sql

package generated

import (
	"context"
)

const getUserByID = `-- name: GetUserByID :one
SELECT id, username, hashed_password, email, created_at, updated_at, confirmation_token, is_confirmed, bio, profile_image_url, background_image_url, is_deleted FROM users WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.HashedPassword,
		&i.Email,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ConfirmationToken,
		&i.IsConfirmed,
		&i.Bio,
		&i.ProfileImageUrl,
		&i.BackgroundImageUrl,
		&i.IsDeleted,
	)
	return i, err
}
