// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: 000005_get_tweets.sql

package generated

import (
	"context"
)

const getTweets = `-- name: GetTweets :many
SELECT id, user_id, message, created_at, updated_at FROM tweets ORDER BY created_at DESC
`

func (q *Queries) GetTweets(ctx context.Context) ([]Tweet, error) {
	rows, err := q.db.QueryContext(ctx, getTweets)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tweet
	for rows.Next() {
		var i Tweet
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Message,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
